--- Python-3.5.2/setup.py	2016-06-25 23:38:39.000000000 +0200
+++ Python-3.5.2-modded/setup.py	2017-01-02 15:58:47.000000000 +0100
@@ -808,11 +808,9 @@
         exts.append( Extension('_socket', ['socketmodule.c'],
                                depends = ['socketmodule.h']) )
         # Detect SSL support for the socket module (via _ssl)
-        search_for_ssl_incs_in = [
-                              '/usr/local/ssl/include',
-                              '/usr/contrib/ssl/include/'
-                             ]
-        ssl_incs = find_file('openssl/ssl.h', inc_dirs,
+        CUSTOM_OPENSSL = '/usr/local/opt/openssl'
+        search_for_ssl_incs_in = [ os.path.join(CUSTOM_OPENSSL, 'include') ]
+        ssl_incs = find_file('openssl/ssl.h', [],
                              search_for_ssl_incs_in
                              )
         if ssl_incs is not None:
@@ -820,17 +818,16 @@
                                ['/usr/kerberos/include'])
             if krb5_h:
                 ssl_incs += krb5_h
-        ssl_libs = find_library_file(self.compiler, 'ssl',lib_dirs,
-                                     ['/usr/local/ssl/lib',
-                                      '/usr/contrib/ssl/lib/'
-                                     ] )
+        ssl_libs = find_library_file(self.compiler, 'ssl', [],
+                                     [ os.path.join(CUSTOM_OPENSSL, 'lib')] )
 
         if (ssl_incs is not None and
             ssl_libs is not None):
             exts.append( Extension('_ssl', ['_ssl.c'],
                                    include_dirs = ssl_incs,
-                                   library_dirs = ssl_libs,
-                                   libraries = ['ssl', 'crypto'],
+                                   library_dirs = [],
+                                   extra_link_args = [ os.path.join(CUSTOM_OPENSSL, 'lib/libssl.a'),
+                                                       os.path.join(CUSTOM_OPENSSL, 'lib/libcrypto.a'), '-ldl'],
                                    depends = ['socketmodule.h']), )
         else:
             missing.append('_ssl')
@@ -870,8 +867,9 @@
                 exts.append( Extension('_hashlib', ['_hashopenssl.c'],
                                        depends = ['hashlib.h'],
                                        include_dirs = ssl_incs,
-                                       library_dirs = ssl_libs,
-                                       libraries = ['ssl', 'crypto']) )
+                                       library_dirs = [],
+                                       extra_link_args = [ os.path.join(CUSTOM_OPENSSL, 'lib/libssl.a'),
+                                                           os.path.join(CUSTOM_OPENSSL, 'lib/libcrypto.a'), '-ldl'] ))
             else:
                 print("warning: openssl 0x%08x is too old for _hashlib" %
                       openssl_ver)
@@ -1446,9 +1444,11 @@
             missing.append('_bz2')
 
         # LZMA compression support.
+        CUSTOM_XZ = '/usr/local/opt/xz'
         if self.compiler.find_library_file(lib_dirs, 'lzma'):
             exts.append( Extension('_lzma', ['_lzmamodule.c'],
-                                   libraries = ['lzma']) )
+                                   library_dirs = [],
+                                   extra_link_args = [ os.path.join(CUSTOM_XZ, 'lib/liblzma.a'), '-ldl'] ))
         else:
             missing.append('_lzma')
 
